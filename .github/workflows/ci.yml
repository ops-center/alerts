name: CI

on:
  pull_request:
    branches:
      - "*"
  push:
    branches:
      - master
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build
    runs-on: ubuntu-22.04
    steps:
      - name: Set up Go 1.24
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v4

      - name: Install yq
        run: |
          curl -fsSL -o yqq https://github.com/mikefarah/yq/releases/download/3.3.0/yq_linux_amd64
          chmod +x yqq
          sudo mv yqq /usr/local/bin/yqq
          pipx install yq

      - name: Run checks
        run: |
          make ci

  app:
    name: App
    runs-on: ubuntu-22.04
    needs: build
    strategy:
      matrix:
        chart:
          - connect-cluster-alerts
          - druid-alerts
          - elasticsearch-alerts
          - kafka-alerts
          - mariadb-alerts
          - mongodb-alerts
          - mysql-alerts
          - perconaxtradb-alerts
          - pgpool-alerts
          - postgres-alerts
          - proxysql-alerts
          - rabbitmq-alerts
          - redis-alerts
          - singlestore-alerts
          - solr-alerts
          - vaultserver-alerts
          - zookeeper-alerts
    steps:
      - uses: actions/checkout@v4

      - name: Install yq
        run: |
          curl -fsSL -o yqq https://github.com/mikefarah/yq/releases/download/3.3.0/yq_linux_amd64
          chmod +x yqq
          sudo mv yqq /usr/local/bin/yqq
          pipx install yq

      - name: Create Kubernetes cluster
        id: kind
        uses: engineerd/setup-kind@v0.5.0
        with:
          version: v0.27.0

      - name: Prepare cluster for testing
        id: local-path
        run: |
          echo "waiting for nodes to be ready ..."
          kubectl wait --for=condition=Ready nodes --all --timeout=5m
          kubectl get nodes
          echo
          echo "install helm 3"
          pushd /usr/local/bin && sudo curl -fsSLO https://github.com/x-helm/helm/releases/latest/download/helm && sudo chmod +x helm && popd

      - name: Test charts
        run: |
          export KUBECONFIG="${HOME}/.kube/config"
          make ct TEST_CHARTS=charts/${{ matrix.chart }}

      - name: Test Alerts
        run: |
          helm install ${{ matrix.chart }} charts/${{ matrix.chart }} --set form.alert.enabled=critical
          helm uninstall ${{ matrix.chart }}
          helm install ${{ matrix.chart }} charts/${{ matrix.chart }} --set form.alert.enabled=warning
          helm uninstall ${{ matrix.chart }}
